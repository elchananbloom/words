import 'package:flutter/material.dart';
import 'package:flutter_localized_locales/flutter_localized_locales.dart';

class L10n {
  static final allLanguages = [
    const Locale('en'),
    const Locale('ko'),
    const Locale('iw'),
    const Locale('ar'),
    // const Locale('zh'),
    const Locale('ja'),
    const Locale('de'),
    const Locale('fr'),
    const Locale('es'),
    const Locale('it'),
    const Locale('ru'),
    const Locale('pt'),
    const Locale('hi'),
    const Locale('bn'),
    //tagalog
    const Locale('tl'),
  ];

  static final supportedLanguages = [
    const Locale('en'),
    const Locale('ko'),
    const Locale('iw'),
    const Locale('ar'),
    // const Locale('zh'),
    const Locale('ja'),
    const Locale('de'),
    const Locale('fr'),
    const Locale('es'),
    const Locale('it'),
    const Locale('ru'),
    const Locale('pt'),
    const Locale('hi'),
    const Locale('bn'),
    //tagalog
    const Locale('tl'),
  ];

  static String getFlag(String countryCode) {
    switch (countryCode) {
      case 'ko':
        return 'ğŸ‡°ğŸ‡·';
      case 'en':
        return 'ğŸ‡ºğŸ‡¸';
      case 'he':
        return 'ğŸ‡®ğŸ‡±';
      case 'ar':
        return 'ğŸ‡¸ğŸ‡¦';
      case 'zh':
        return 'ğŸ‡¨ğŸ‡³';
      case 'ja':
        return 'ğŸ‡¯ğŸ‡µ';
      case 'de':
        return 'ğŸ‡©ğŸ‡ª';
      case 'fr':
        return 'ğŸ‡«ğŸ‡·';
      case 'es':
        return 'ğŸ‡ªğŸ‡¸';
      case 'it':
        return 'ğŸ‡®ğŸ‡¹';
      case 'ru':
        return 'ğŸ‡·ğŸ‡º';
      case 'pt':
        return 'ğŸ‡µğŸ‡¹';
      case 'hi':
        return 'ğŸ‡®ğŸ‡³';
      case 'bn':
        return 'ğŸ‡§ğŸ‡©';
      case 'tl':
        return 'ğŸ‡µğŸ‡­';
      case '+':
        return '+';
      default:
        return 'no flag';
    }
  }

  static String getLangCodeFromFlag(String flag) {
    switch (flag) {
      case 'ğŸ‡°ğŸ‡·':
        return 'ko';
      case 'ğŸ‡ºğŸ‡¸':
        return 'en';
      case 'ğŸ‡®ğŸ‡±':
        return 'he';
      case 'ğŸ‡¸ğŸ‡¦':
        return 'ar';
      case 'ğŸ‡¨ğŸ‡³':
        return 'zh';
      case 'ğŸ‡¯ğŸ‡µ':
        return 'ja';
      case 'ğŸ‡©ğŸ‡ª':
        return 'de';
      case 'ğŸ‡«ğŸ‡·':
        return 'fr';
      case 'ğŸ‡ªğŸ‡¸':
        return 'es';
      case 'ğŸ‡®ğŸ‡¹':
        return 'it';
      case 'ğŸ‡·ğŸ‡º':
        return 'ru';
      case 'ğŸ‡µğŸ‡¹':
        return 'pt';
      case 'ğŸ‡®ğŸ‡³':
        return 'hi';
      case 'ğŸ‡§ğŸ‡©':
        return 'bn';
      case 'ğŸ‡µğŸ‡­':
        return 'tl';

      default:
        return 'no flag';
    }
  }

  static String getLanguageName(BuildContext context, String countryCode) {
    if (countryCode == 'iw') {
      return '×¢×‘×¨×™×ª';
    }
    if(countryCode == ''){
      return '';
    }
    return LocaleNames.of(context)!.nameOf(countryCode)!;
  }
}
